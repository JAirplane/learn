@using learn.Helpers

<div class="row">
	<ul class="list-group me-4 selectable-list">
		@foreach(var item in OnNotSelected)
		{
			<li class="list-group-item mb-1" @onclick="(() => Select(item))">
				@item.Value
			</li>
		}
	</ul>

	<div>
		@if(allSelected)
		{
			<button class="btn btn-danger" @onclick="SelectDeselectAll">Deselect All</button>
		}
		else
		{
			<button class="btn btn-primary" @onclick="SelectDeselectAll">Select All</button>
		}
	</div>

	<ul class="list-group ms-4 selectable-list">
		@foreach (var item in OnSelected)
		{
			<li class="list-group-item mb-1 list-group-item-info" @onclick="(() => Deselect(item))">
				@item.Value
			</li>
		}
	</ul>
</div>

@code {
	private bool allSelected;

	[Parameter]
	public List<MultipleSelectorHelperModel> OnSelected { get; set; }
	[Parameter]
	public List<MultipleSelectorHelperModel> OnNotSelected { get; set; }

	void Select(MultipleSelectorHelperModel selectedItem)
	{
		OnSelected.Add(selectedItem);
		OnNotSelected.Remove(selectedItem);
	}
	void Deselect(MultipleSelectorHelperModel deselectedItem)
	{
		OnSelected.Remove(deselectedItem);
		OnNotSelected.Add(deselectedItem);
	}
	void SelectDeselectAll()
	{
		if(allSelected)
		{
			OnNotSelected.AddRange(OnSelected);
			OnSelected.Clear();
			allSelected = false;
		}
		else
		{
			OnSelected.AddRange(OnNotSelected);
			OnNotSelected.Clear();
			allSelected = true;
		}
	}
}
