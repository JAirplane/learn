@using learn.Helpers
<EditForm Model="Game" OnValidSubmit="OnValidSubmit">
	<DataAnnotationsValidator />

	<div class="form-group">
		<label>Name:</label>
		<div>
			<InputText class="form-control" @bind-Value="Game.Name" />
			<ValidationMessage For="@(() => Game.Name)"></ValidationMessage>
		</div>
	</div>

	<div class="form-group">
		<label>Gameplay Video:</label>
		<div>
			<InputText class="form-control" @bind-Value="Game.GamePlayVideo" />
			<ValidationMessage For="@(() => Game.GamePlayVideo)"></ValidationMessage>
		</div>
	</div>

	<div class="form-group">
		<label>Release Date:</label>
		<div>
			<InputDate class="form-control" @bind-Value="Game.ReleaseDate" />
			<ValidationMessage For="@(() => Game.ReleaseDate)"></ValidationMessage>
		</div>
	</div>

	<div class="form-group">
		<InputImage Label="Image" OnImageFileSelected="ImageFileSelectedHandler" ImageUrl="@imageUrl"/>
	</div>

	<div class="form-check">
		<InputCheckbox @bind-Value="Game.InSale" class="form-check-input" id="gridCheck1"/>
		<label class="form-check-label" for="gridCheck1">In Sale?</label>
	</div>

	<div class="form-group form-markdown">
		<MarkdownInput @bind-Value="Game.Description"
						Label="Description"
						OnFor="(() => Game.Description)" />
	</div>

	<div class="form-group">
		<label>Game Genres</label>
		<MultipleSelector OnSelected="Selected" OnNotSelected="NotSelected" />
	</div>

	<button class="btn btn-primary" type="submit">Save Changes</button>

</EditForm>

@code {
	private string? imageUrl;

	[Parameter]
	public GameModel Game{ get; set; }
	[Parameter]
	public EventCallback OnValidSubmit { get; set; }
	[Parameter]
	public List<Genre> SelectedGenres { get; set; } = new();
	[Parameter]
	public List<Genre> NotSelectedGenres { get; set; } = new();
	[Parameter]
	public List<MultipleSelectorHelperModel>? Selected { get; set; }
	[Parameter]
	public List<MultipleSelectorHelperModel>? NotSelected { get; set; }

	protected override void OnInitialized()
	{
		Selected = SelectedGenres.Select(x => new MultipleSelectorHelperModel(x.Id.ToString(), x.Name)).ToList();
		NotSelected = NotSelectedGenres.Select(x => new MultipleSelectorHelperModel(x.Id.ToString(), x.Name)).ToList();
		if(Game.ReleaseDate == null)
		{
			Game.ReleaseDate = DateTime.Now;
		}
		if (!string.IsNullOrWhiteSpace(Game.ImageLink))
		{
			imageUrl = Game.ImageLink;
			Game.ImageLink = null;
		}
	}

	public void ImageFileSelectedHandler(string imageBase64)
	{
		Game.ImageLink = imageBase64;
		imageUrl = null;
	}
}
